{"version":3,"sources":["img/paper-plane2.svg","Map.js","Planes.js","Chat.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","icon","Icon","iconUrl","avion","iconSize","MapaMundi","flights","position","Map","center","zoom","TileLayer","url","attribution","map","Marker","Tooltip","code","Polyline","positions","origin","destination","Planes","props","information_flight","this","flight","className","style","paddingLeft","airline","plane","Math","round","seats","padding","type","data-toggle","borderRadius","passengers","pasajero","name","age","onClick","quitInfo","marginTop","color","getInfo","React","Component","Search","Input","Text","Typography","Meta","Card","socket","require","connect","path","MyForm","state","userName","isLoggedIn","messages","onButtonClicked","value","payload","message","emit","setState","searchVal","on","msg","user","date","Date","id","fontSize","MozUserFocus","display","flexDirection","paddingBottom","key","width","margin","alignSelf","loading","avatar","backgroundColor","toUpperCase","title","description","placeholder","enterButton","size","onChange","e","target","onSearch","document","body","App","preventDefault","console","log","isLogged","some","new_position","slice","index","findIndex","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59e94b3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paper-plane2.d8a5c98e.svg\";","import React from \"react\";\nimport { Map, Marker, Tooltip, TileLayer, Polyline } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport avion from \"./img/paper-plane2.svg\";\n//import * as parkData from \"./data/skateboard-parks.json\";\nimport \"./App.css\";\n//import Planes from \"./Planes\"\n//<Polyline pathOptions={{color:'#eb42dd', weight:5}} positions={flights} />\n\nexport const icon = new Icon({\n  iconUrl: avion,\n  iconSize: [35, 35]\n});\n\nexport default function MapaMundi({flights, position}) {\n\n  return (\n    <Map center={[-35.6, -71.54]} zoom={4}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      {position.map(position => \n        <Marker position={position.position} icon={icon}>\n          <Tooltip>\n            {position.code}<br /> Lat: {position.position[0]} <br /> Long: {position.position[1]}\n          </Tooltip>\n        </Marker>\n      )};\n      {flights.map(flights => \n        <Polyline positions={[flights.origin, flights.destination]}\n        />\n      )}\n      \n    </Map>\n  );\n}\n","import React from \"react\";\n\n\nexport default class Planes extends React.Component {\n  constructor(props) {\n    super(props);\n  };\n\n\n  render() {\n    const information_flight =this.props.flights.map(flight=>{\n      return  <div className=\"col-3\">\n                <div className=\"card card-block card-1\" style={{paddingLeft: '13px'}}>\n                  <br></br>\n                  <strong>{flight.airline}</strong>\n                  {flight.plane}<br></br><br></br>\n                  Origen: ({Math.round(flight.origin[0])}, {Math.round(flight.origin[1])})<br></br>\n                  Destino: ({Math.round(flight.destination[0])}, {Math.round(flight.destination[1])})<br></br>\n                  Asientos: {flight.seats}<br></br>\n\n                  <div className=\"dropup\" style={{padding:\"3px\"}}>\n                    <button type=\"button\" className=\"btn btn-info dropdown-toggle\" data-toggle=\"dropdown\">\n                      Pasajeros\n                    </button>\n                    <div className=\"dropdown-menu\" style={{borderRadius:\"10px\"}}>\n                      {flight.passengers.map(pasajero=>\n                        // eslint-disable-next-line\n                        <a className=\"dropdown-item\">{pasajero.name} : {pasajero.age}</a>\n                      )}\n                    </div>\n                  </div>\n            \n                </div>\n              </div>\n            })\n\n    return (\n\n    <div>\n      \n      <div className=\"container-fluid\">  \n        <div className=\"scrolling-wrapper row flex-row flex-nowrap mt-4 pb-4 pt-2\">\n          <div className=\"col-3\">\n          <button onClick={this.props.quitInfo} className=\"btn btn-outline-info shadow lg-3\" style={{marginTop:\"0\", color:\"rgb(143, 143, 143)\"}} >Ocultar Información</button>\n            <button onClick={this.props.getInfo} className=\"btn btn-info shadow lg-3\" style={{marginTop:\"10%\", color:\"black\"}} ><strong>OBTENER INFORMACIÓN</strong></button>\n            <br></br><br></br><p style={{color:\"rgb(143, 143, 143)\"}}>Para ver más información de los vuelos, haz scroll hacia la derecha.</p>\n          </div>\n          {information_flight}  \n        </div>\n      </div>\n      \n    </div>)\n    \n  }\n}","import React from 'react';\n//import { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Card, Avatar, Input, Typography } from 'antd';\nimport 'antd/dist/antd.css';\n\n\nconst { Search } = Input;\nconst { Text } = Typography;\nconst { Meta } = Card;\n\nconst io = require(\"socket.io-client\")\nconst socket = io.connect('ws://tarea-3-websocket.2021-1.tallerdeintegracion.cl', {\n    path:'/flights'\n});\n\nexport default class MyForm extends React.Component {\n\n    state = {\n        userName: '',\n        isLoggedIn: false,\n        messages: []\n    }\n\n    componentDidMount() {\n\n      socket.on('CHAT', message =>{\n        this.setState((state) =>\n          ({ messages: [...state.messages,\n              {msg: message.message,\n              user: message.name,\n              date: new Date(message.date)}\n            ]})\n          );\n      });\n    };\n\n    onButtonClicked = (value) => {\n\n      var payload = {\n        name: this.state.userName,\n        message: value\n      }\n\n      socket.emit('CHAT', payload);\n      this.setState({ searchVal: '' })\n\n    }\n\n    render() {\n        return (\n          <div className=\"main\" id='wrapper'>\n            {this.state.isLoggedIn ?\n            <div id=\"scroller\">\n              <div className=\"title\">\n                <Text id=\"main-heading\" type=\"secondary\" style={{ fontSize: '36px' }}><strong>Centro de Control:</strong> {this.state.userName}</Text>\n              </div>\n              <div style={{ MozUserFocus:\"end\", display: 'flex', flexDirection: 'column', paddingBottom: 50 }} id=\"messages\" className=\"messages\">\n                {this.state.messages.map(message => \n                  <Card key={message.msg} style={{ width: 300, margin: '16px 4px 0 4px', alignSelf: this.state.userName === message.user ? 'flex-end' : 'flex-start' }} loading={false}>\n                    <Meta\n                      avatar={\n                        <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>{message.user[0].toUpperCase()}</Avatar>\n                      }\n                      title={message.user + \" : \" + message.date}\n                      description={message.msg}\n                    />\n                  </Card> \n                )}\n              </div>\n              <div className=\"bottom\">\n                <Search\n                  placeholder=\"Escribe un mensaje y envialo...\"\n                  enterButton=\"Enviar\"\n                  value={this.state.searchVal}\n                  size=\"large\"\n                  onChange={(e) => this.setState({ searchVal: e.target.value })}\n                  onSearch={value => this.onButtonClicked(value)}\n                />\n              </div> \n            </div>\n            :\n            <div style={{ padding: '200px 40px'}}>\n              <Text id=\"main-heading\" type=\"secondary\" style={{ fontSize: '36px', color:\"white\" }}>Introduce tu nombre de usuario:</Text>\n              <br></br><br></br><br></br><br></br>\n              <Search\n                placeholder=\"Escribe tu nombre...\"\n                enterButton=\"Registrate\"\n                size=\"large\"\n                onSearch={value => this.setState({ isLoggedIn: true, userName: value })}\n              />\n            </div>\n          }\n          </div>\n        )\n    }\n}","import React from \"react\";\n//import { Map, Marker, Popup, TileLayer, Polyline } from \"react-leaflet\";\n//import { Icon } from \"leaflet\";\n//import * as parkData from \"./data/skateboard-parks.json\";\nimport \"./App.css\";\nimport MapaMundi from \"./Map.js\"\nimport Planes from \"./Planes.js\";\nimport MyForm from \"./Chat.js\";\n//import Planes from \"./Planes\"\n\nconst io = require(\"socket.io-client\")\nconst socket = io.connect('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl', {\n    path:'/flights'\n});\ndocument.body.style.backgroundColor=\"rgb(21, 23, 25)\"\n\nexport default class App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state= {\n      flights: [],\n      userName: \"\",\n      isLogged: false,\n      messages: [],\n      position: []\n    }\n  }\n\n  componentDidMount(){\n    socket.on(\"POSITION\", position => {\n      if(this.state.position.some(e => e.code === position.code)) {\n\n        let new_position = this.state.position.slice()\n        let index = new_position.findIndex(e => e.code === position.code)\n        new_position[index]=position\n        this.setState({ position: new_position })\n\n      } else\n        this.setState((state) => ({ position: [...state.position, position]}))\n        //this.state.position.push(position)\n    })\n   \n  }\n\n  getInfo = (e) => {\n    e.preventDefault();\n    socket.emit('FLIGHTS',\"\");\n    socket.on('FLIGHTS', message => {\n      console.log(message);\n      this.setState({ flights: message })\n    })\n  }\n\n  quitInfo = (e) => {\n    e.preventDefault();\n    this.setState({ flights: []})\n    \n  }\n\n  render () {\n    return(\n      <div className=\"root\">\n        <div>\n          <MapaMundi\n          flights= {this.state.flights}\n          position= {this.state.position}\n          />\n        </div>\n        <div className=\"information\">\n          <Planes\n          getInfo= {this.getInfo}\n          quitInfo= {this.quitInfo}\n          flights= {this.state.flights}\n          />\n        </div>\n        <div className=\"chat\">\n          <MyForm/>\n        </div>\n      </div>\n\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import Planes from './Planes';\n//import MyForm from './Chat';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n//ReactDOM.render(<Planes />, document.getElementById('information'));\n//ReactDOM.render(<MyForm/>, document.getElementById('chat'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}