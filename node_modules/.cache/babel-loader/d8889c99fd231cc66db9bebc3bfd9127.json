{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport defaultRenderEmpty from './renderEmpty';\n\nvar defaultGetPrefixCls = function defaultGetPrefixCls(suffixCls, customizePrefixCls) {\n  if (customizePrefixCls) return customizePrefixCls;\n  return suffixCls ? \"ant-\".concat(suffixCls) : 'ant';\n};\n\nexport var ConfigContext =\n/*#__PURE__*/\nReact.createContext({\n  // We provide a default function for Context without provider\n  getPrefixCls: defaultGetPrefixCls,\n  renderEmpty: defaultRenderEmpty\n});\nexport var ConfigConsumer = ConfigContext.Consumer;\n/** @deprecated Use hooks instead. This is a legacy function */\n\nexport function withConfigConsumer(config) {\n  return function withConfigConsumerFunc(Component) {\n    // Wrap with ConfigConsumer. Since we need compatible with react 15, be care when using ref methods\n    var SFC = function SFC(props) {\n      return (\n        /*#__PURE__*/\n        React.createElement(ConfigConsumer, null, function (configProps) {\n          var basicPrefixCls = config.prefixCls;\n          var getPrefixCls = configProps.getPrefixCls;\n          var customizePrefixCls = props.prefixCls;\n          var prefixCls = getPrefixCls(basicPrefixCls, customizePrefixCls);\n          return (\n            /*#__PURE__*/\n            React.createElement(Component, _extends({}, configProps, props, {\n              prefixCls: prefixCls\n            }))\n          );\n        })\n      );\n    };\n\n    var cons = Component.constructor;\n    var name = cons && cons.displayName || Component.name || 'Component';\n    SFC.displayName = \"withConfigConsumer(\".concat(name, \")\");\n    return SFC;\n  };\n}","map":{"version":3,"sources":["/Users/mac/Documents/Ingenieria/11vo Semestre/Taller de IntegracioÃÅn/Tarea 3/final_tarea/node_modules/antd/es/config-provider/context.js"],"names":["_extends","React","defaultRenderEmpty","defaultGetPrefixCls","suffixCls","customizePrefixCls","concat","ConfigContext","createContext","getPrefixCls","renderEmpty","ConfigConsumer","Consumer","withConfigConsumer","config","withConfigConsumerFunc","Component","SFC","props","createElement","configProps","basicPrefixCls","prefixCls","cons","constructor","name","displayName"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,kBAAP,MAA+B,eAA/B;;AAEA,IAAIC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,SAA7B,EAAwCC,kBAAxC,EAA4D;AACpF,MAAIA,kBAAJ,EAAwB,OAAOA,kBAAP;AACxB,SAAOD,SAAS,GAAG,OAAOE,MAAP,CAAcF,SAAd,CAAH,GAA8B,KAA9C;AACD,CAHD;;AAKA,OAAO,IAAIG,aAAa;AAAG;AAAaN,KAAK,CAACO,aAAN,CAAoB;AAC1D;AACAC,EAAAA,YAAY,EAAEN,mBAF4C;AAG1DO,EAAAA,WAAW,EAAER;AAH6C,CAApB,CAAjC;AAKP,OAAO,IAAIS,cAAc,GAAGJ,aAAa,CAACK,QAAnC;AACP;;AAEA,OAAO,SAASC,kBAAT,CAA4BC,MAA5B,EAAoC;AACzC,SAAO,SAASC,sBAAT,CAAgCC,SAAhC,EAA2C;AAChD;AACA,QAAIC,GAAG,GAAG,SAASA,GAAT,CAAaC,KAAb,EAAoB;AAC5B;AAAO;AAAajB,QAAAA,KAAK,CAACkB,aAAN,CAAoBR,cAApB,EAAoC,IAApC,EAA0C,UAAUS,WAAV,EAAuB;AACnF,cAAIC,cAAc,GAAGP,MAAM,CAACQ,SAA5B;AACA,cAAIb,YAAY,GAAGW,WAAW,CAACX,YAA/B;AACA,cAAIJ,kBAAkB,GAAGa,KAAK,CAACI,SAA/B;AACA,cAAIA,SAAS,GAAGb,YAAY,CAACY,cAAD,EAAiBhB,kBAAjB,CAA5B;AACA;AAAO;AAAaJ,YAAAA,KAAK,CAACkB,aAAN,CAAoBH,SAApB,EAA+BhB,QAAQ,CAAC,EAAD,EAAKoB,WAAL,EAAkBF,KAAlB,EAAyB;AAClFI,cAAAA,SAAS,EAAEA;AADuE,aAAzB,CAAvC;AAApB;AAGD,SARmB;AAApB;AASD,KAVD;;AAYA,QAAIC,IAAI,GAAGP,SAAS,CAACQ,WAArB;AACA,QAAIC,IAAI,GAAGF,IAAI,IAAIA,IAAI,CAACG,WAAb,IAA4BV,SAAS,CAACS,IAAtC,IAA8C,WAAzD;AACAR,IAAAA,GAAG,CAACS,WAAJ,GAAkB,sBAAsBpB,MAAtB,CAA6BmB,IAA7B,EAAmC,GAAnC,CAAlB;AACA,WAAOR,GAAP;AACD,GAlBD;AAmBD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport defaultRenderEmpty from './renderEmpty';\n\nvar defaultGetPrefixCls = function defaultGetPrefixCls(suffixCls, customizePrefixCls) {\n  if (customizePrefixCls) return customizePrefixCls;\n  return suffixCls ? \"ant-\".concat(suffixCls) : 'ant';\n};\n\nexport var ConfigContext = /*#__PURE__*/React.createContext({\n  // We provide a default function for Context without provider\n  getPrefixCls: defaultGetPrefixCls,\n  renderEmpty: defaultRenderEmpty\n});\nexport var ConfigConsumer = ConfigContext.Consumer;\n/** @deprecated Use hooks instead. This is a legacy function */\n\nexport function withConfigConsumer(config) {\n  return function withConfigConsumerFunc(Component) {\n    // Wrap with ConfigConsumer. Since we need compatible with react 15, be care when using ref methods\n    var SFC = function SFC(props) {\n      return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (configProps) {\n        var basicPrefixCls = config.prefixCls;\n        var getPrefixCls = configProps.getPrefixCls;\n        var customizePrefixCls = props.prefixCls;\n        var prefixCls = getPrefixCls(basicPrefixCls, customizePrefixCls);\n        return /*#__PURE__*/React.createElement(Component, _extends({}, configProps, props, {\n          prefixCls: prefixCls\n        }));\n      });\n    };\n\n    var cons = Component.constructor;\n    var name = cons && cons.displayName || Component.name || 'Component';\n    SFC.displayName = \"withConfigConsumer(\".concat(name, \")\");\n    return SFC;\n  };\n}"]},"metadata":{},"sourceType":"module"}