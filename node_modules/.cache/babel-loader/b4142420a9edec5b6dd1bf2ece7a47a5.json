{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nimport CSSMotion from 'rc-motion';\nimport classNames from 'classnames';\nvar MobilePopupInner =\n/*#__PURE__*/\nReact.forwardRef(function (props, ref) {\n  var prefixCls = props.prefixCls,\n      visible = props.visible,\n      zIndex = props.zIndex,\n      children = props.children,\n      _props$mobile = props.mobile;\n  _props$mobile = _props$mobile === void 0 ? {} : _props$mobile;\n  var popupClassName = _props$mobile.popupClassName,\n      popupStyle = _props$mobile.popupStyle,\n      _props$mobile$popupMo = _props$mobile.popupMotion,\n      popupMotion = _props$mobile$popupMo === void 0 ? {} : _props$mobile$popupMo,\n      popupRender = _props$mobile.popupRender;\n  var elementRef = React.useRef(); // ========================= Refs =========================\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      forceAlign: function forceAlign() {},\n      getElement: function getElement() {\n        return elementRef.current;\n      }\n    };\n  }); // ======================== Render ========================\n\n  var mergedStyle = _objectSpread({\n    zIndex: zIndex\n  }, popupStyle);\n\n  var childNode = children; // Wrapper when multiple children\n\n  if (React.Children.count(children) > 1) {\n    childNode =\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-content\")\n    }, children);\n  } // Mobile support additional render\n\n\n  if (popupRender) {\n    childNode = popupRender(childNode);\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(CSSMotion, _extends({\n      visible: visible,\n      ref: elementRef,\n      removeOnLeave: true\n    }, popupMotion), function (_ref, motionRef) {\n      var motionClassName = _ref.className,\n          motionStyle = _ref.style;\n      var mergedClassName = classNames(prefixCls, popupClassName, motionClassName);\n      return (\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          ref: motionRef,\n          className: mergedClassName,\n          style: _objectSpread(_objectSpread({}, motionStyle), mergedStyle)\n        }, childNode)\n      );\n    })\n  );\n});\nMobilePopupInner.displayName = 'MobilePopupInner';\nexport default MobilePopupInner;","map":{"version":3,"sources":["/Users/mac/Documents/Ingenieria/11vo Semestre/Taller de Integración/Tarea 3/final_tarea/node_modules/rc-trigger/es/Popup/MobilePopupInner.js"],"names":["_extends","_objectSpread","React","CSSMotion","classNames","MobilePopupInner","forwardRef","props","ref","prefixCls","visible","zIndex","children","_props$mobile","mobile","popupClassName","popupStyle","_props$mobile$popupMo","popupMotion","popupRender","elementRef","useRef","useImperativeHandle","forceAlign","getElement","current","mergedStyle","childNode","Children","count","createElement","className","concat","removeOnLeave","_ref","motionRef","motionClassName","motionStyle","style","mergedClassName","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nimport CSSMotion from 'rc-motion';\nimport classNames from 'classnames';\nvar MobilePopupInner = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var prefixCls = props.prefixCls,\n      visible = props.visible,\n      zIndex = props.zIndex,\n      children = props.children,\n      _props$mobile = props.mobile;\n  _props$mobile = _props$mobile === void 0 ? {} : _props$mobile;\n  var popupClassName = _props$mobile.popupClassName,\n      popupStyle = _props$mobile.popupStyle,\n      _props$mobile$popupMo = _props$mobile.popupMotion,\n      popupMotion = _props$mobile$popupMo === void 0 ? {} : _props$mobile$popupMo,\n      popupRender = _props$mobile.popupRender;\n  var elementRef = React.useRef(); // ========================= Refs =========================\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      forceAlign: function forceAlign() {},\n      getElement: function getElement() {\n        return elementRef.current;\n      }\n    };\n  }); // ======================== Render ========================\n\n  var mergedStyle = _objectSpread({\n    zIndex: zIndex\n  }, popupStyle);\n\n  var childNode = children; // Wrapper when multiple children\n\n  if (React.Children.count(children) > 1) {\n    childNode = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-content\")\n    }, children);\n  } // Mobile support additional render\n\n\n  if (popupRender) {\n    childNode = popupRender(childNode);\n  }\n\n  return /*#__PURE__*/React.createElement(CSSMotion, _extends({\n    visible: visible,\n    ref: elementRef,\n    removeOnLeave: true\n  }, popupMotion), function (_ref, motionRef) {\n    var motionClassName = _ref.className,\n        motionStyle = _ref.style;\n    var mergedClassName = classNames(prefixCls, popupClassName, motionClassName);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: motionRef,\n      className: mergedClassName,\n      style: _objectSpread(_objectSpread({}, motionStyle), mergedStyle)\n    }, childNode);\n  });\n});\nMobilePopupInner.displayName = 'MobilePopupInner';\nexport default MobilePopupInner;"]},"metadata":{},"sourceType":"module"}